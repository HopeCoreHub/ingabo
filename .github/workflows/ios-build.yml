name: iOS Build and App Store Upload

on:
  push:
    branches: [ main ]
    tags:
      - 'v*'
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      upload_to_app_store:
        description: 'Upload to App Store Connect'
        required: false
        default: false
        type: boolean

env:
  FLUTTER_VERSION: '3.24.0'  # Update to match your Flutter version

jobs:
  build-ios:
    name: Build iOS IPA
    runs-on: macos-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: ${{ env.FLUTTER_VERSION }}
        channel: 'stable'
        cache: true
        
    - name: Install dependencies
      run: flutter pub get
      
    - name: Run tests
      run: flutter test
      
    - name: Setup Xcode
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: latest-stable
        
    - name: Setup Code Signing
      run: |
        # Create temporary keychain
        security create-keychain -p "" build.keychain
        security default-keychain -s build.keychain
        security unlock-keychain -p "" build.keychain
        security set-keychain-settings -t 3600 -u build.keychain
        
        # Import certificate if provided, otherwise use automatic signing
        if [ -n "${{ secrets.IOS_DIST_SIGNING_KEY }}" ]; then
          echo "${{ secrets.IOS_DIST_SIGNING_KEY }}" | base64 --decode > certificate.p12
          security import certificate.p12 -k build.keychain -P "${{ secrets.IOS_DIST_SIGNING_KEY_PASSWORD }}" -T /usr/bin/codesign
          security set-key-partition-list -S apple-tool:,apple:,codesign: -s -k "" build.keychain
          echo "Using manual code signing"
        else
          echo "Using automatic code signing"
        fi
        
    - name: Download Apple Provisioning Profiles
      if: ${{ secrets.IOS_DIST_SIGNING_KEY }}
      uses: Apple-Actions/download-provisioning-profiles@v1
      with:
        bundle-id: ${{ secrets.IOS_BUNDLE_ID }}
        issuer-id: ${{ secrets.APPSTORE_ISSUER_ID }}
        api-key-id: ${{ secrets.APPSTORE_KEY_ID }}
        api-private-key: ${{ secrets.APPSTORE_PRIVATE_KEY }}
        
    - name: Update version info
      run: |
        # Extract version from pubspec.yaml
        VERSION=$(grep '^version:' pubspec.yaml | cut -d ' ' -f 2 | cut -d '+' -f 1)
        BUILD_NUMBER=$(grep '^version:' pubspec.yaml | cut -d '+' -f 2)
        
        # If triggered by tag, use tag as version
        if [[ "${{ github.ref_type }}" == "tag" ]]; then
          VERSION=${GITHUB_REF#refs/tags/v}
          BUILD_NUMBER=${{ github.run_number }}
        else
          BUILD_NUMBER=${{ github.run_number }}
        fi
        
        echo "VERSION=$VERSION" >> $GITHUB_ENV
        echo "BUILD_NUMBER=$BUILD_NUMBER" >> $GITHUB_ENV
        
        echo "Building version: $VERSION+$BUILD_NUMBER"
        
    - name: Build iOS IPA
      run: |
        flutter build ipa \
          --release \
          --build-name=${{ env.VERSION }} \
          --build-number=${{ env.BUILD_NUMBER }} \
          --export-options-plist=ios/ExportOptions.plist
          
    - name: Upload IPA as artifact
      uses: actions/upload-artifact@v4
      with:
        name: ios-ipa-${{ env.VERSION }}-${{ env.BUILD_NUMBER }}
        path: build/ios/ipa/*.ipa
        retention-days: 30
        
    - name: Upload to App Store Connect
      if: |
        (github.event_name == 'push' && github.ref == 'refs/heads/main') ||
        (github.event_name == 'workflow_dispatch' && github.event.inputs.upload_to_app_store == 'true') ||
        (github.ref_type == 'tag')
      uses: Apple-Actions/upload-testflight-build@v1
      with:
        app-path: build/ios/ipa/HopeCore Hub.ipa
        issuer-id: ${{ secrets.APPSTORE_ISSUER_ID }}
        api-key-id: ${{ secrets.APPSTORE_KEY_ID }}
        api-private-key: ${{ secrets.APPSTORE_PRIVATE_KEY }}
        
    - name: Notify build status
      if: always()
      run: |
        if [ "${{ job.status }}" == "success" ]; then
          echo "✅ iOS build completed successfully!"
          echo "Version: ${{ env.VERSION }}+${{ env.BUILD_NUMBER }}"
        else
          echo "❌ iOS build failed!"
        fi

  notify-completion:
    name: Notify Build Completion
    runs-on: ubuntu-latest
    needs: build-ios
    if: always()
    
    steps:
    - name: Build Summary
      run: |
        echo "## 📱 iOS Build Summary" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "**Status:** ${{ needs.build-ios.result == 'success' && '✅ Success' || '❌ Failed' }}" >> $GITHUB_STEP_SUMMARY
        echo "**Trigger:** ${{ github.event_name }}" >> $GITHUB_STEP_SUMMARY
        echo "**Branch/Tag:** ${{ github.ref_name }}" >> $GITHUB_STEP_SUMMARY
        echo "**Commit:** ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        
        if [ "${{ needs.build-ios.result }}" == "success" ]; then
          echo "### 🎉 Build Artifacts" >> $GITHUB_STEP_SUMMARY
          echo "- iOS IPA file has been generated and uploaded as an artifact" >> $GITHUB_STEP_SUMMARY
          echo "- Check the Actions tab to download the IPA file" >> $GITHUB_STEP_SUMMARY
          
          if [[ "${{ github.event_name }}" == "push" && "${{ github.ref }}" == "refs/heads/main" ]] || \
             [[ "${{ github.event_name }}" == "workflow_dispatch" && "${{ github.event.inputs.upload_to_app_store }}" == "true" ]] || \
             [[ "${{ github.ref_type }}" == "tag" ]]; then
            echo "- App has been uploaded to App Store Connect (TestFlight)" >> $GITHUB_STEP_SUMMARY
          fi
        else
          echo "### ❌ Build Failed" >> $GITHUB_STEP_SUMMARY
          echo "Please check the build logs for more details." >> $GITHUB_STEP_SUMMARY
        fi
